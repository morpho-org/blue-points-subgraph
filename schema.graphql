enum PositionType {
  SUPPLY
  BORROW
  COLLATERAL
}

type MorphoFeeRecipient @entity {
    "Empty bytes"
    id: Bytes!
    feeRecipient: User!
}

type MorphoTx @entity {
  id: Bytes!

  type: PositionType!

  user: User!

  market: Market!

  shares: BigInt!

  timestamp: BigInt!

  # Additionals informations
  txHash: Bytes!
  txIndex: BigInt!
  logIndex: BigInt!
  blockNumber: BigInt!
}

type User @entity {
  id: Bytes!

  morphoTxs: [MorphoTx!]! @derivedFrom(field: "user")
  rateUpdateTxs: [RateUpdateTx!]! @derivedFrom(field: "sender")
  positions: [Position!]! @derivedFrom(field: "user")
  ownedRewardPrograms: [RewardProgram!]! @derivedFrom(field: "sender")
  rewardProgramAccruals: [UserRewardProgramAccrual!]! @derivedFrom(field: "user")
  rewardProgramsOwned: [RewardProgram!]! @derivedFrom(field: "sender")

  metaMorphoFeeRecipients: [MorphoFeeRecipient!]! @derivedFrom(field: "feeRecipient")
  metaMorphoPositions: [MetaMorphoPosition!]! @derivedFrom(field: "user")
    metaMorphoTxs: [MetaMorphoTx!]! @derivedFrom(field: "user")
}

type Market @entity {
  id: Bytes!

  totalSupplyShares: BigInt!
  totalBorrowShares: BigInt!
  totalCollateral: BigInt!

  morphoTxs: [MorphoTx!]! @derivedFrom(field: "market")
  rewardsRates: [RewardsRate!]! @derivedFrom(field: "market")
  positions: [Position!]! @derivedFrom(field: "market")
}

type URD @entity {
  id: Bytes!

  rewardPrograms: [RewardProgram!]! @derivedFrom(field: "urd")
}

type Position @entity {
  "concat of the user address and the market id"
  id: Bytes!

  user: User!
  market: Market!
  supplyShares: BigInt!
  borrowShares: BigInt!
  collateral: BigInt!

  rewards: [PositionRewards!]! @derivedFrom(field: "position")
}

type PositionRewards @entity {
  "concat of the position id and the rewards rate id"
  id: Bytes!

  rewardsRate: RewardsRate!
  position: Position!

  positionSupplyIndex: BigInt!
  positionBorrowIndex: BigInt!
  positionCollateralIndex: BigInt!

  positionSupplyAccrued: BigInt!
  positionBorrowAccrued: BigInt!
  positionCollateralAccrued: BigInt!
}

type RewardProgram @entity {
    "concat of the sender address, reward token address and the URD address"
    id: Bytes!
    sender: User!
    urd: URD!
    rewardToken: Bytes!

    rates: [RewardsRate!]! @derivedFrom(field: "rewardProgram")
    rateUpdates: [RateUpdateTx!]! @derivedFrom(field: "rewardProgram")
    userRewardProgramAccruals: [UserRewardProgramAccrual!]! @derivedFrom(field: "rewardProgram")
    metaMorphoRewards: [MetaMorphoRewards!]! @derivedFrom(field: "program")
}

type UserRewardProgramAccrual @entity {
    "concat of the user address and the reward program id"
    id: Bytes!

    user: User!
    rewardProgram: RewardProgram!

    supplyRewardsAccrued: BigInt!
    borrowRewardsAccrued: BigInt!
    collateralRewardsAccrued: BigInt!
}

type RewardsRate @entity {
  "concat of the RewardProgram id & the Market ID"
  id: Bytes!
  rewardProgram: RewardProgram!

  market: Market!

  supplyRatePerYear: BigInt!
  borrowRatePerYear: BigInt!
  collateralRatePerYear: BigInt!

  availableAt: BigInt!

  supplyIndex: BigInt!
  borrowIndex: BigInt!
  collateralIndex: BigInt!

  lastUpdateTimestamp: BigInt!

  rateUpdates: [RateUpdateTx!]! @derivedFrom(field: "rewardsRate")
  positionsRewards: [PositionRewards!]! @derivedFrom(field: "rewardsRate")

}

type RateUpdateTx @entity {
  id: Bytes!

  sender: User!

  urd: URD!

  rewardToken: Bytes!

  market: Market!

  supplyRatePerYear: BigInt!
  borrowRatePerYear: BigInt!
  collateralRatePerYear: BigInt!

  rewardProgram: RewardProgram!
  rewardsRate: RewardsRate!

  timestamp: BigInt!

  # Additionals informations
  txHash: Bytes!
  txIndex: BigInt!
  logIndex: BigInt!
  blockNumber: BigInt!
}


type MetaMorpho @entity {
    id: Bytes!

    totalShares: BigInt!

    feeRecipient: User

    metaMorphoTxs: [MetaMorphoTx!]! @derivedFrom(field: "metaMorpho")
    positions: [MetaMorphoPosition!]! @derivedFrom(field: "metaMorpho")
    rewards: [MetaMorphoRewards!]! @derivedFrom(field: "metaMorpho")

}

type MetaMorphoPosition @entity {
  id: Bytes!

  metaMorpho: MetaMorpho!

  user: User!

  shares: BigInt!

  rewards: [MetaMorphoPositionRewards!]! @derivedFrom(field: "position")

}

type MetaMorphoRewards @entity {
     id: Bytes!

    metaMorpho: MetaMorpho!

    program: RewardProgram!


    lastIndex: BigInt!
    accrued: BigInt!

    positionsRewards: [MetaMorphoPositionRewards!]! @derivedFrom(field: "metaMorphoRewards")
}

type MetaMorphoPositionRewards @entity {

        " concat of the metamorpho rewards id and the position id"
      id: Bytes!

      metaMorphoRewards: MetaMorphoRewards!

      position: MetaMorphoPosition!

      lastIndex: BigInt!

      accrued: BigInt!
}

type MetaMorphoTx @entity {

    id: Bytes!

    metaMorpho: MetaMorpho!

    user: User!

    shares: BigInt!

    timestamp: BigInt!

    # Additionals informations
    txHash: Bytes!
    txIndex: BigInt!
    logIndex: BigInt!
    blockNumber: BigInt!
}